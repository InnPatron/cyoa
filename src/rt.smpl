mod rt;

#[opaque]
struct Data(type T) { }

struct Choice(type T) {
    handle: fn(T) -> T,
    display: String
}

builtin fn init_ctxt(type C)(c: C) -> C;

builtin fn new_data(type T)() -> Data(type T);

// C requires a 'state' field and a 'choice_list' field
builtin fn choice(type C)(context: C, handler: fn(C) -> C, display: String) -> C;
builtin fn clear_choices(type C)(context: C) -> C;

builtin fn set_state(type C)(context: C, state: int) -> C;

builtin fn set_data(type T)(data: Data(type T), key: String, v: T) -> Data(type T);
builtin fn get_data(type T)(data: Data(type T), key: String) -> T;
